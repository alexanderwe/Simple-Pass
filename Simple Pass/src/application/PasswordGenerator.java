/**
 * (C) Copyright 2015, Alexander Weiﬂ
 *	The use of this software is free. 
 *	I do not assume that the passwords generated by this program
 *	are unbreakable. This program should only give a fast
 *	possibility to generate a random password. 
 *	Use at your own risk.
 */


package application;

import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.util.ArrayList;


/**
 * Class for generating a random password.
 */
public class PasswordGenerator {

	private int length;
	private SecureRandom numberGenerator;
	private char [] lowercase = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}; 
	private char [] uppercase = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'}; 
	private char [] numbers  =  {'1','2','3','4' ,'5','6','7','8','9','0'};
	private char [] specials  = {'\u00C4','\u00D6','\u00DC','\u00DF','\u00E4','\u00F6','\u00FC', '=', '{', '}', '#', '%','$','/','!','(',')'};

	
	/**
	 * Creates a new PasswordGenerator object.
	 * @param length of the password
	 */
	public PasswordGenerator(int length){
		this.length = length;
		try {
		    numberGenerator = SecureRandom.getInstance("SHA1PRNG");
		} catch(NoSuchAlgorithmException nsae) {
		   
		}
	}
	
	/**
	 * Generates a password with the length set in the constructor of PasswordGenerator. Some letter option can be defined with the different 
	 * booleans.
	 * @param lowercase
	 * @param uppercase
	 * @param numbers
	 * @param specials
	 * @return a password string
	 * {@link #PasswordGenerator(int)}
	 */
	public String generatePassword(boolean lowercase, boolean uppercase, boolean numbers, boolean specials){
		int rndNumber;	 
		StringBuffer password = new StringBuffer();
		
		for(int i = 0 ; i<this.length;i++){
			
			
			ArrayList<char []> arrays = new ArrayList<char []>();
			
			/*
			 * Add the needed arrays to the arraylist
			 */
			if(lowercase){
				arrays.add(this.lowercase);
			}
			
			if(uppercase){
				arrays.add(this.uppercase);
			}
			
			if(numbers){
				arrays.add(this.numbers);
			}
			
			if(specials){
				arrays.add(this.specials);
			}
			
			//choose a array randomly and a random character from this array
			rndNumber = numberGenerator.nextInt(arrays.size());
			password.append(arrays.get(rndNumber)[numberGenerator.nextInt(arrays.get(rndNumber).length)]);
		}
		return password.toString();	
	}
}
